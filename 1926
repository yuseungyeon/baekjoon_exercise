import sys
from collections import deque

dx = [0, 0, -1, 1]
dy = [1, -1, 0, 0]

def bfs(x, y):
    q = deque()
    q.append((x, y))
    ans = 1
    visited[x][y] = 1
    picture[x][y] = 0
    while q:
        a, b = q.popleft()
        for i in range(4):
            cx = a + dx[i]
            cy = b + dy[i]
            if 0 <= cx <n and 0 <= cy < m:
                if picture[cx][cy] == 1:
                    picture[cx][cy] = 0
                    visited[cx][cy] = 1
                    q.append((cx, cy))
                    ans += 1
    return ans

n, m = map(int, sys.stdin.readline().split())
picture = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]
visited = [[0]*m for _ in range(n)]
count = 0
area = 0
for i in range(n):
    for j in range(m):
        if picture[i][j] == 1 and visited[i][j] == 0:
            tmp = bfs(i, j)
            count += 1
            area = max(area, tmp)

print(count, area, sep = '\n')
