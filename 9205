import sys
from collections import deque

def check(point1, point2):
    if abs(point1[0] - point2[0]) + abs(point1[1] - point2[1]) <= 1000:
        return True
    return False

def bfs(num):
    q = deque()
    visited[num] = 1
    q.append(num)
    while q:
        go = q.popleft()
        for k in edges[go]:
            if visited[k] == 0:
                visited[k] = 1
                q.append(k)
    if visited[-1] == 0:
        print('sad')
    else:
        print('happy')
    

for _ in range(int(sys.stdin.readline())):
    n = int(sys.stdin.readline())
    location = deque()
    edges = [[] for _ in range(n+2)]
    visited = [0]*(n+2)
    for _ in range(n+2):
        a, b = map(int, sys.stdin.readline().split())
        location.append((a, b))
    for i in range(n+2):
        for j in range(n+2):
            if i != j:
                if check(location[i], location[j]):
                    edges[i].append(j)        
    bfs(0)
