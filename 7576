import sys
from collections import deque

m, n = map(int, sys.stdin.readline().split())
maze = [list(map(int, sys.stdin.readline().split())) for _ in range(n)]

dx = [-1, 0, 1, 0]
dy = [0, -1, 0, 1]

def bfs():
    while tomato:
        a, b = tomato.popleft()
        for i in range(4):
            nx = a + dx[i]
            ny = b + dy[i]
            if 0 > nx or nx >= n or 0 > ny or ny >= m:
                continue
            if maze[nx][ny] == 0:
                maze[nx][ny] = maze[a][b] + 1
                tomato.append((nx, ny))

tomato = deque()

for i in range(n):
    for j in range(m):
        if maze[i][j] == 1:
            tomato.append((i, j))
ans = 0
bfs()

check = True
for i in maze:
    for j in i:
        if j == 0:
            check = False
            break
    if check == False:
        break
    ans = max(ans, max(i))

if check == True:
    print(ans-1)
else:
    print(-1)
